[versions]
punica-versionCode = "1"
punica-versionName = "1.0.0"

agp = "8.8.0-alpha05"
alertKmp = "2.0.0"
android-compileSdk = "35"
android-minSdk = "29"
android-targetSdk = "35"
androidx-activityCompose = "1.10.1"
androidx-lifecycle = "2.8.4"
appdirs = "1.3.0"
buildkonfig = "0.16.0"
compose-icon = "1.1.1"
compose-multiplatform = "1.8.0-alpha03"
compose-settings = "2.10.0"
cryptography = "0.4.0"
datastore = "1.1.3"
glance = "1.1.1"
kotlin = "2.1.20-RC"
kotlinx-coroutines = "1.10.1"
kotlinx-datetime = "0.6.1"
kotlinx-serialization = "1.8.0"
ksoup = "0.2.2"
ktor = "3.0.3"
materialkolor = "2.0.2"
navigation = "2.8.0-alpha12"
otp = "2.4.1"
paging = "3.3.0-alpha02-0.5.1"
startup-runtine = "1.2.0"
sublime-fuzzy = "2.3.4"

[libraries]
alertKmp = { module = "io.github.khubaibkhan4:alert-kmp", version.ref = "alertKmp" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
appdirs = { module = "net.harawata:appdirs", version.ref = "appdirs" }
composeIcon-css = { module = "br.com.devsrsouza.compose.icons:css-gg", version.ref = "compose-icon" }
composeIcon-simple = { module = "br.com.devsrsouza.compose.icons:simple-icons", version.ref = "compose-icon" }
composeIcon-tabler = { module = "br.com.devsrsouza.compose.icons:tabler-icons", version.ref = "compose-icon" }
composeSettings-ui = { module = "com.github.alorma.compose-settings:ui-tiles", version.ref = "compose-settings" }
cryptography-core = { module = "dev.whyoleg.cryptography:cryptography-core", version.ref = "cryptography" }
cryptography-provider-jdk = { module = "dev.whyoleg.cryptography:cryptography-provider-jdk", version.ref = "cryptography" }
cryptography-provider-apple = { module = "dev.whyoleg.cryptography:cryptography-provider-apple", version.ref = "cryptography" }
datastore = { module = "androidx.datastore:datastore-preferences-core", version.ref = "datastore" }
glance-appwidget = { module = "androidx.glance:glance-appwidget", version.ref = "glance" }
glance-material3 = { module = "androidx.glance:glance-material3", version.ref = "glance" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
ksoup = { module = "com.fleeksoft.ksoup:ksoup", version.ref = "ksoup" }
ktor-client-content-negotitation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
material3-windowSizeClass = { module = "org.jetbrains.compose.material3:material3-window-size-class", version.ref = "compose-multiplatform" }
materialkolor = { module = "com.materialkolor:material-kolor", version.ref = "materialkolor" }
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigation" }
otp = { module = "dev.turingcomplete:kotlin-onetimepassword", version.ref = "otp" }
paging-compose = { module = "app.cash.paging:paging-compose-common", version.ref = "paging" }
startup-runtine = { module = "androidx.startup:startup-runtime", version.ref = "startup-runtine" }
sublime-fuzzy = { module = "com.github.android-password-store:sublime-fuzzy", version.ref = "sublime-fuzzy" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
buildkonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildkonfig" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }